version: "3.8"

services:
  mongodb:
    image: mongo:7
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db

  zookeeper:
    image: bitnami/zookeeper:latest
    restart: always
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:latest
    restart: always
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  spark:
    image: bitnami/spark:latest
    restart: always
    environment:
      - SPARK_MODE=master

  hadoop:
    image: bitnami/hadoop:latest
    restart: always

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redis_data:/data

  backend:
    build: ./backend
    restart: always
    environment:
      MONGO_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/${MONGO_DB}?authSource=admin
      REDIS_URL: redis://redis:6379/0
      KAFKA_BROKER: ${KAFKA_BROKER}
    depends_on:
      - mongodb
      - redis
      - kafka
    ports:
      - "5000:5000"

  worker:
    build: ./backend
    restart: always
    command: celery -A app.worker worker --loglevel=info
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      - redis
      - backend

  flower:
    image: mher/flower
    restart: always
    command: flower --broker=redis://redis:6379/0 --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_URL: http://backend:5000
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  mongo_data:
  redis_data:
